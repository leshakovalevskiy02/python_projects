import random
from pprint import pprint

RUS_LET = set('абвгдеёжзийклмнопрстуфхцчшщьыъэюя'.upper())
word_list = ['человек', 'работа', 'вопрос', 'сторона', 'страна', 'случай', 'голова',
             'ребенок', 'система', 'женщина', 'деньги', 'машина', 'проблема',
             'решение', 'история', 'власть', 'тысяча', 'возможность', 'результат',
             'область', 'статья', 'компания', 'группа', 'развитие', 'процесс', 'условие',
             'средство', 'начало', 'уровень', 'минута', 'качество', 'дорога', 'действие',
             'государство', 'любовь', 'взгляд', 'общество', 'деятельность', 'организация',
             'президент', 'комната', 'порядок', 'момент', 'письмо', 'помощь', 'ситуация',
             'положение', 'интерес', 'отношение', 'федерация', 'правило', 'управление', 'мужчина',
             'партия', 'сердце', 'движение', 'материал', 'неделя', 'чувство', 'газета',
             'причина', 'основа', 'товарищ', 'культура', 'данные', 'мнение', 'документ',
             'институт', 'проект', 'дорога', 'мать', 'действие', 'месяц', 'государство',
             'кровь', 'район', 'небо', 'армия', 'класс', 'представитель', 'участие',
             'образование', 'мальчик', 'представитель', 'участие', 'девочка',
             'политика', 'картина', 'доллар', 'территория', 'изменение', 'направление',
             'рисунок', 'течение', 'церковь', 'население', 'большинство', 'музыка',
             'правда', 'свобода', 'память', 'команда', 'договор', 'дерево', 'хозяин',
             'природа', 'телефон', 'позиция', 'писатель', 'самолет', 'солнце', 'спектакль',
             'способ', 'журнал', 'руководитель']


def get_word():
    return random.choice(word_list).upper()


def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / \\
           -
        ''',
        # голова, торс, обе руки, одна нога
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / 
           -
        ''',
        # голова, торс, обе руки
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |      
           -
        ''',
        # голова, торс и одна рука
        '''
           --------
           |      |
           |      O
           |     \\|
           |      |
           |     
           -
        ''',
        # голова и торс
        '''
           --------
           |      |
           |      O
           |      |
           |      |
           |     
           -
        ''',
        # голова
        '''
           --------
           |      |
           |      O
           |    
           |      
           |     
           -
        ''',
        # начальное состояние
        '''
           --------
           |      |
           |      
           |    
           |      
           |     
           -
        '''
    ]
    return stages[tries]


def play(word):
    word_completion = '_' * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    guessed = False  # сигнальная метка
    guessed_letters = []  # список уже названных букв
    tries = 6  # количество попыток
    print('Давайте играть в угадайку слов!')
    print(display_hangman(tries))
    print('Загаданное слово')
    print(word_completion)
    letter = input('Введите букву: ')
    while tries > 0:
        if len(letter) == 1 and ord('А') <= ord(letter.upper()) <= ord('Я'):
            while True:
                if letter.upper() not in guessed_letters:
                    guessed_letters.append(letter.upper())
                    res = 0
                    for i, elem in enumerate(word):
                        if letter.upper() == elem:
                            res += 1
                            print(f'Ура!Буква {letter.upper()} есть в слове')
                            word_completion = list(word_completion)
                            word_completion[i] = letter.upper()
                            word_completion = ''.join(word_completion)
                            print(word_completion)
                    if word_completion.isalpha():
                        guessed = True
                        break
                else:
                    letter = input('Эту букву вы уже вводили. Введите другую букву: ')
                    break
                result = 1 if not res else 0
                if result == 1:
                    print(display_hangman(tries - 1))
                    print(word_completion)
                tries -= result
                print(f'Названные буквы {guessed_letters}')
                pprint(f'Буквы которые вы можете использовать: {sorted(RUS_LET - set(guessed_letters))}')
                if tries:
                    letter = correct_letter()
                break
            if guessed:
                print('Ураааа!!!Вы выграли')
                break
        else:
            letter = input('Введите букву русского алфавита: ')
    else:
        print('Увы, но вы проиграли!Загаданное слово')
        print(word)


def correct_letter():
    letter = input('Введите следующую букву: ')
    while True:
        if len(letter) == 1 and ord('А') <= ord(letter.upper()) <= ord('Я'):
            break
        else:
            letter = input('Введите корректную букву: ')
    return letter


play(get_word())
res = input('Хотите сыграть еще (0 - нет, любое другой символ/сообщение - да): ')
while True:
    if res == '0':
        break
    else:
        play(get_word())
        res = input('Хотите сыграть еще (0 - нет, любое другой символ/сообщение - да): ')